package: org.robovm.apple.modelio
include: [foundation.yaml, coregraphics.yaml]
library: ModelIO
framework: ModelIO
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/ModelIO.framework/Headers/ModelIO.h
typedefs: {}
    
enums:
    MDLLightType: {}
    MDLGeometryType: {prefix: MDLGeometryType, ignore: '.*Kind.*'}
    MDLIndexBitDepth: {}
    MDLMaterialMipMapFilterMode: {}
    MDLMaterialPropertyType: {}
    MDLMaterialSemantic: {}
    MDLMaterialTextureFilterMode: {}
    MDLMaterialTextureWrapMode: {}
    MDLMeshBufferType: {}
    MDLTextureChannelEncoding: {}
    MDLVertexFormat: {}
    MDLProbePlacement: {}
    MDLCameraProjection: {}
    MDLMaterialFace: {}
    MDLDataPrecision: {} #since 11.0
    MDLAnimatedValueInterpolation: {}
    MDLTransformOpRotationOrder: {}

classes:
    # Structs
    MDLAxisAlignedBoundingBox: {} # DONE
    MDLVoxelIndexExtent: {} # DONE

    MDLAreaLight: {} # DONE
    MDLAsset: # DONE
        methods:
            '-initWithURL:vertexDescriptor:bufferAllocator:preserveTopology:error:':
                name: init
                throws: NSErrorException
            '-init.*':
                name: init
            '-exportAssetToURL:':
                exclude: true
            '-exportAssetToURL:error:':
                name: export
                throws: NSErrorException
            '-boundingBoxAtTime:':
                name: getBoundingBox
            '-addObject:':
                trim_after_first_colon: true
            '-removeObject:':
                trim_after_first_colon: true
            '-objectAtIndexedSubscript:':
                exclude: true
            '-objectAtIndex:':
                name: getObject
            '+canImportFileExtension:':
                trim_after_first_colon: true
            '+canExportFileExtension:':
                trim_after_first_colon: true
            '+placeLightProbesWithDensity:heuristic:usingIrradianceDataSource:':
                name: placeLightProbes
            '-setComponent:forProtocol:':
                name: setComponentForProtocol
            '-setObject:forKeyedSubscript:':
                name: setObjectForKeyedSubscript
    MDLCamera: # DONE
        methods:
            '-frameBoundingBox:setNearAndFar:':
                trim_after_first_colon: true
            '-lookAt.*':
                trim_after_first_colon: true
            '-rayTo:forViewPort:':
                trim_after_first_colon: true
            '-bokehKernelWithSize:':
                name: newBokehKernel
    MDLCheckerboardTexture: # DONE
        methods:
            '-init.*':
                name: init
    MDLColorSwatchTexture: # DONE
        methods:
            '-init.*':
                name: init
    MDLLight: # DONE
        methods:
            '-irradianceAtPoint:.*':
                name: getIrradiance
    MDLLightProbe: # DONE
        methods:
            '-initWithReflectiveTexture:irradianceTexture:':
                name: init
            '-generateSphericalHarmonicsFromIrradiance:':
                name: generateSphericalHarmonics
            '+lightProbeWithTextureSize:forLocation:lightsToConsider:objectsToConsider:reflectiveCubemap:irradianceCubemap:':
                exclude: true
    MDLMaterial: # DONE
        methods:
            '-init.*':
                name: init
            '-removeProperty:':
                trim_after_first_colon: true
            '-propertyNamed:':
                name: getProperty
            '-propertyWithSemantic:':
                name: getProperty
            '-objectAtIndexedSubscript:':
                name: getProperty
            '-objectForKeyedSubscript:':
                exclude: true
    MDLMaterialProperty: # DONE
        methods:
            '-init.*':
                name: init
    MDLMesh: # DONE
        properties:
            'submeshes':
                type: NSMutableArray<MDLSubmesh>
        methods:
            '-initHemisphereWithExtent:segments:inwardNormals:cap:geometryType:allocator:':
                trim_after_first_colon: true
                constructor: false # as conflicts, a wrapper to be done
            '-init.*':
                trim_after_first_colon: true
                parameters:
                    submeshes:
                        type: NSMutableArray<MDLSubmesh>
                    vertexBuffers:
                        type: List<MDLMeshBuffer>
                        marshaler: NSArray.AsListMarshaler
                    submeshes:
                        type: NSMutableArray<MDLSubmesh>
            '-vertexAttributeDataForAttributeNamed:':
                name: getVertexAttributeData
            '-vertexAttributeDataForAttributeNamed:asFormat:':
                 name: getVertexAttributeData
            '-addAttributeWithName:format:':
                name: addAttribute
            '-addNormalsWithAttributeNamed:creaseThreshold:':
                name: addNormals
            '-addTangentBasisForTextureCoordinateAttributeNamed:tangentAttributeNamed:bitangentAttributeNamed:':
                name: addTangentBasis
            '-addTangentBasisForTextureCoordinateAttributeNamed:normalAttributeNamed:tangentAttributeNamed:':
                name: addTangentBasisWithNormals
            '-addAttributeWithName:format:type:data:stride:':
                name: addAttribute
            '-addAttributeWithName:format:type:data:stride:time:':
                name: addAttribute
            '-addOrthTanBasisForTextureCoordinateAttributeNamed:normalAttributeNamed:tangentAttributeNamed:':
                name: addOrthTanBasis
            '-replaceAttributeNamed:withData:':
                name: replaceAttribute
            '-updateAttributeNamed:withData:':
                name: updateAttribute
            '+newCapsuleWithHeight:radii:radialSegments:verticalSegments:hemisphereSegments:geometryType:inwardNormals:allocator:':
                name: newCapsuleWithHeight
            '+newIcosahedronWithRadius:inwardNormals:geometryType:allocator:':
                name: newIcosahedronWithRadius
            '+newBoxWithDimensions:segments:geometryType:inwardNormals:allocator:':
                name: newBox
            '+newEllipsoidWithRadii:radialSegments:verticalSegments:geometryType:inwardNormals:hemisphere:allocator:':
                name: newEllipsoid
            '+newCylinderWithHeight:radii:radialSegments:verticalSegments:geometryType:inwardNormals:allocator:':
                name: newCylinder
            '+newEllipticalConeWithHeight:radii:radialSegments:verticalSegments:geometryType:inwardNormals:allocator:':
                name: newEllipticalCone
            '+newPlaneWithDimensions:segments:geometryType:allocator:':
                name: newPlane
            '+newIcosahedronWithRadius:inwardNormals:allocator:':
                name: newIcosahedron
            '+newSubdividedMesh:submeshIndex:subdivisionLevels:':
                trim_after_first_colon: true
            '-generateAmbientOcclusionTexture.*':
                name: generateAmbientOcclusionTexture
                parameters:
                    objectsToConsider:
                        type: NSArray<MDLObject>
            '-generateAmbientOcclusionVertexColors.*':
                name: generateAmbientOcclusionVertexColors
                parameters:
                    objectsToConsider:
                        type: NSArray<MDLObject>
            '-generateLightMapTexture.*':
                name: generateLightMapTexture
                parameters:
                    objectsToConsider:
                        type: NSArray<MDLObject>
                    lightsToConsider:
                        type: NSArray<MDLLight>
            '-generateLightMapVertexColorsWithLightsToConsider:objectsToConsider:vertexAttributeNamed:':
                name: generateLightMapVertexColors
                parameters:
                    objectsToConsider:
                        type: NSArray<MDLObject>
                    lightsToConsider:
                        type: NSArray<MDLLight>            
    MDLMeshBufferData: # DONE
        methods:
            '-init.*':
                name: init
    MDLMeshBufferDataAllocator: {} # DONE
    MDLMeshBufferMap: # DONE
        properties:
            'bytes':
                type: '@Pointer long'
        methods:
            '-initWithBytes:deallocator:':
                name: init
                parameters:
                    bytes:
                        type: '@Pointer long'
    MDLMeshBufferZoneDefault: {} # DONE
    MDLNoiseTexture: # DONE
        methods:
            '-initCellularNoiseWithFrequency:name:textureDimensions:channelEncoding:':
                name: initCellularNoise
                constructor: false # as conflicts
            '-init.*':
                name: init
    MDLNormalMapTexture: # DONE
        methods:
            '-init.*':
                name: init
    MDLObject: # DONE
        methods:
            '-setComponent:forProtocol:':
                name: setComponent
            '-componentConformingToProtocol:':
                name: getComponent
            '-addChild:':
                trim_after_first_colon: true
            '-boundingBoxAtTime:':
                name: getBoundingBox
            '-enumerateChildObjectsOfClass:root:usingBlock:stopPointer:':
                name: enumerateChildObjects
            '-setObject:forKeyedSubscript:':
                name: setObjectForKeyedSubscript
    MDLObjectContainer: {} # DONE
    MDLPhotometricLight: # DONE
        methods:
            '-initWithIESProfile:':
                name: init
            '-generateSphericalHarmonicsFromLight:':
                name: generateSphericalHarmonics
            '-generateCubemapFromLight:':
                name: generateCubemap
    MDLPhysicallyPlausibleLight: {} # DONE
    MDLPhysicallyPlausibleScatteringFunction: {} # DONE
    MDLScatteringFunction: {} # DONE
    MDLSkyCubeTexture: # DONE
        methods:
            '-init.*':
                name: init
    MDLStereoscopicCamera: {} # DONE
    MDLSubmesh: # DONE
        methods:
            '-init.*':
                name: init
    MDLSubmeshTopology: {} # DONE
    MDLTexture: # DONE
        methods:
            '-initWithData:topLeftOrigin:name:dimensions:rowStride:channelCount:channelEncoding:isCube:':
                name: init
            '-writeToURL.*':
                name: write
                parameters:
                    type:
                        type: String
            '-imageFromTexture':
                name: getImage
            '-texelDataWithTopLeftOrigin.*':
                name: getTexelDataWithTopLeftOrigin
            '-texelDataWithBottomLeftOrigin.*':
                name: getTexelDataWithBottomLeftOrigin
            '+textureNamed.*':
                name: create
                constructor: true
            '+textureCubeWithImagesNamed.*':
                name: newTextureCube
                parameters:
                    names:
                        type: List<String>
                        marshaler: NSArray.AsStringListMarshaler
            '+irradianceTextureCube.*':
                name: newIrradianceTextureCube
    MDLTextureFilter: {} # DONE
    MDLTextureSampler: {} # DONE
    MDLTransform: # DONE
        methods:
            '-initWithIdentity':
                constructor: false
            '-init.*':
                name: init
            '-translationAtTime:':
                name: getTranslation
            '-rotationAtTime:':
                name: getRotation
            '-shearAtTime:':
                name: getShear
            '-scaleAtTime:':
                name: getScale
            '-set.*':
                trim_after_first_colon: true
            '-rotationMatrixAtTime:':
                name: getRotationMatrix
    MDLURLTexture: # DONE
        methods:
            '-init.*':
                name: init
    MDLVertexAttribute: # DONE
        methods:
            '-init.*':
                name: init
    MDLVertexAttributeData: {} # DONE
    MDLVertexBufferLayout: {} # DONE
    MDLVertexDescriptor: # DONE
        properties:
            'attributes':
                type: NSMutableArray<MDLVertexAttribute>
            'layouts':
                type: NSMutableArray<MDLVertexBufferLayout>
        methods:
            '-initWithVertexDescriptor:':
                name: init
            '-attributeNamed:':
                name: getAttribute
            '-addOrReplaceAttribute:':
                trim_after_first_colon: true
    MDLVoxelArray: # DONE
        methods:
            '-init.*':
                name: init
            '-meshUsingAllocator:':
                name: getMesh
            '-voxelExistsAtIndex:allowAnyX:allowAnyY:allowAnyZ:allowAnyShell:':
                name: voxelExists
            '-setVoxelAtIndex:':
                name: setVoxel
            '-setVoxels.*':
                name: setVoxels
            '-voxelsWithinExtent:':
                name: getVoxelsWithinExtent
            '-voxelIndices':
                property: true
            '-unionWithVoxels:':
                name: union
            '-differenceWithVoxels:':
                name: difference
            '-intersectWithVoxels:':
                name: intersect
            '-indexOfSpatialLocation:':
                name: indexOfSpatialLocation
            '-spatialLocationOfIndex:':
                name: getSpatialLocation
            '-voxelBoundingBoxAtIndex:':
                name: getVoxelBoundingBox

    MDLMaterialPropertyConnection:
        methods:
            '-init.*':
                name: init
    MDLMaterialPropertyGraph:
        methods:
            '-init.*':
                name: init
    MDLMaterialPropertyNode:
        methods:
            '-init.*':
                name: init
    MDLAnimatedMatrix4x4: #since 11.0
        methods:
            '-setFloat4x4:atTime:':
                trim_after_first_colon: true
            '-setDouble4x4:atTime:':
                trim_after_first_colon: true
            '-resetWithFloat4x4Array:atTimes:count:':
                trim_after_first_colon: true
            '-resetWithDouble4x4Array:atTimes:count:':
                trim_after_first_colon: true
            '-getFloat4x4Array:maxCount:':
                trim_after_first_colon: true
            '-getDouble4x4Array:maxCount:':
                trim_after_first_colon: true
    MDLAnimatedQuaternionArray: #since 11.0
        methods:
            '-setFloatQuaternionArray:count:atTime:':
                trim_after_first_colon: true
            '-setDoubleQuaternionArray:count:atTime:':
                trim_after_first_colon: true
            '-getFloatQuaternionArray:maxCount:atTime:':
                trim_after_first_colon: true
            '-getDoubleQuaternionArray:maxCount:atTime:':
                trim_after_first_colon: true
            '-resetWithFloatQuaternionArray:count:atTimes:count:':
                trim_after_first_colon: true
            '-resetWithDoubleQuaternionArray:count:atTimes:count:':
                trim_after_first_colon: true
            '-getFloatQuaternionArray:maxCount:':
                trim_after_first_colon: true
            '-getDoubleQuaternionArray:maxCount:':
                trim_after_first_colon: true
    MDLAnimatedScalar: #since 11.0
        methods:
            '-setFloat:atTime:':
                trim_after_first_colon: true
            '-setDouble:atTime:':
                trim_after_first_colon: true
            '-resetWithFloatArray:atTimes:count:':
                trim_after_first_colon: true
            '-resetWithDoubleArray:atTimes:count:':
                trim_after_first_colon: true
            '-getFloatArray:maxCount:':
                trim_after_first_colon: true
            '-getDoubleArray:maxCount:':
                trim_after_first_colon: true
    MDLAnimatedScalarArray: #since 11.0
        methods:
            '-setFloatArray:count:atTime:':
                trim_after_first_colon: true
            '-setDoubleArray:count:atTime:':
                trim_after_first_colon: true
            '-getFloatArray:maxCount:atTime:':
                trim_after_first_colon: true
            '-getDoubleArray:maxCount:atTime:':
                trim_after_first_colon: true
            '-resetWithFloatArray:count:atTimes:count:':
                trim_after_first_colon: true
            '-resetWithDoubleArray:count:atTimes:count:':
                trim_after_first_colon: true
            '-getFloatArray:maxCount:':
                trim_after_first_colon: true
            '-getDoubleArray:maxCount:':
                trim_after_first_colon: true
    MDLAnimatedValue: #since 11.0
        methods:
            '-getTimes:maxCount:':
                trim_after_first_colon: true
    MDLAnimatedVector2: #since 11.0
        methods:
            '-setFloat2:atTime:':
                trim_after_first_colon: true
            '-setDouble2:atTime:':
                trim_after_first_colon: true
            '-resetWithFloat2Array:atTimes:count:':
                trim_after_first_colon: true
            '-resetWithDouble2Array:atTimes:count:':
                trim_after_first_colon: true
            '-getFloat2Array:maxCount:':
                trim_after_first_colon: true
            '-getDouble2Array:maxCount:':
                trim_after_first_colon: true
    MDLAnimatedVector3: #since 11.0
        methods:
            '-setFloat3:atTime:':
                trim_after_first_colon: true
            '-setDouble3:atTime:':
                trim_after_first_colon: true
            '-resetWithFloat3Array:atTimes:count:':
                trim_after_first_colon: true
            '-resetWithDouble3Array:atTimes:count:':
                trim_after_first_colon: true
            '-getFloat3Array:maxCount:':
                trim_after_first_colon: true
            '-getDouble3Array:maxCount:':
                trim_after_first_colon: true
    MDLAnimatedVector3Array: #since 11.0
        methods:
            '-setFloat3Array:count:atTime:':
                trim_after_first_colon: true
            '-setDouble3Array:count:atTime:':
                trim_after_first_colon: true
            '-getFloat3Array:maxCount:atTime:':
                trim_after_first_colon: true
            '-getDouble3Array:maxCount:atTime:':
                trim_after_first_colon: true
            '-resetWithFloat3Array:count:atTimes:count:':
                trim_after_first_colon: true
            '-resetWithDouble3Array:count:atTimes:count:':
                trim_after_first_colon: true
            '-getFloat3Array:maxCount:':
                trim_after_first_colon: true
            '-getDouble3Array:maxCount:':
                trim_after_first_colon: true
    MDLAnimatedVector4: #since 11.0
        methods:
            '-setFloat4:atTime:':
                trim_after_first_colon: true
            '-setDouble4:atTime:':
                trim_after_first_colon: true
            '-resetWithFloat4Array:atTimes:count:':
                trim_after_first_colon: true
            '-resetWithDouble4Array:atTimes:count:':
                trim_after_first_colon: true
            '-getFloat4Array:maxCount:':
                trim_after_first_colon: true
            '-getDouble4Array:maxCount:':
                trim_after_first_colon: true
    MDLAnimationBindComponent: {} #since 11.0
    MDLBundleAssetResolver: {} #since 11.0
    MDLMatrix4x4Array: #since 11.0
        methods:
            '-setFloat4x4Array:count:':
                trim_after_first_colon: true
            '-setDouble4x4Array:count:':
                trim_after_first_colon: true
            '-getFloat4x4Array:maxCount:':
                trim_after_first_colon: true
            '-getDouble4x4Array:maxCount:':
                trim_after_first_colon: true
    MDLPackedJointAnimation: #since 11.0
        methods:
            '-initWithName:jointPaths:':
                name: init
    MDLPathAssetResolver: {} #since 11.0
    MDLRelativeAssetResolver: {} #since 11.0
    MDLSkeleton: #since 11.0
        methods:
            '-initWithName:jointPaths:':
                name: init
    MDLTransformMatrixOp: {} #since 11.0
    MDLTransformRotateOp: {} #since 11.0
    MDLTransformRotateXOp: {} #since 11.0
    MDLTransformRotateYOp: {} #since 11.0
    MDLTransformRotateZOp: {} #since 11.0
    MDLTransformScaleOp: {} #since 11.0
    MDLTransformStack: #since 11.0
        methods:
            '-addTranslateOp:inverse:':
                trim_after_first_colon: true
            '-addRotateXOp:inverse:':
                trim_after_first_colon: true
            '-addRotateYOp:inverse:':
                trim_after_first_colon: true
            '-addRotateZOp:inverse:':
                trim_after_first_colon: true
            '-addRotateOp:order:inverse:':
                trim_after_first_colon: true
            '-addScaleOp:inverse:':
                trim_after_first_colon: true
            '-addMatrixOp:inverse:':
                trim_after_first_colon: true
    MDLTransformTranslateOp: {} #since 11.0

protocols:
    MDLLightProbeIrradianceDataSource:
        skip_adapter: true
    MDLComponent: # DONE
        skip_adapter: true
    MDLMeshBuffer: # DONE
        skip_adapter: true
        methods:
            '-fillData:offset:':
                name: fill
            '-map':
                property: true
    MDLMeshBufferAllocator: # DONE
        skip_adapter: true
        methods:
            '-newZone:':
                trim_after_first_colon: true
            '-newZoneForBuffersWithSize:andType:':
                name: newZone
                parameters:
                    sizes:
                        type: List<Integer>
                        marshaler: NSArray.AsIntegerListMarshaler
                    types:
                        type: List<MDLMeshBufferType>
                        marshaler: MDLMeshBufferType.AsListMarshaler
            '-newBuffer.*':
                name: newBuffer
    MDLMeshBufferZone: # DONE
        skip_adapter: true
    MDLNamed: # DONE
        skip_adapter: true
    MDLObjectContainerComponent: # DONE
        skip_adapter: true
        properties:
            'objects':
                type: NSArray<MDLObject>
        methods:
            '-addObject:':
                trim_after_first_colon: true
            '-removeObject:':
                trim_after_first_colon: true
    MDLTransformComponent: # DONE
        skip_adapter: true
        methods:
            '-setLocalTransform.*':
                trim_after_first_colon: true
            '-localTransformAtTime:':
                name: getLocalTransform
            '+globalTransformWithObject:atTime:':
                name: getGlobalTransform
                exclude: true
    MDLAssetResolver: {} #since 11.0
    MDLJointAnimation: {} #since 11.0
    MDLTransformOp: {} #since 11.0

functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?MDL.*):
        class: ModelIO
        name: 'Function__#{g[0]}'

values:
    MDLVertexAttribute(.*):
        enum: MDLVertexAttributeName
        name: '#{g[0]}'
        type: NSString

    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?MDL.*):
        class: ModelIO
        name: 'Value__#{g[0]}'

constants:
    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?MDL.*):
        class: ModelIO
        name: 'Constant__#{g[0]}'
