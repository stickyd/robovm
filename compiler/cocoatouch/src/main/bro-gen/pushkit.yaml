package: org.robovm.apple.pushkit
include: [foundation.yaml, dispatch.yaml]
library: PushKit
framework: PushKit
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/PushKit.framework/Headers/PushKit.h
    - /System/Library/Frameworks/PushKit.framework/Headers/PKDefines.h
typedefs: {}
    
enums: {}
        
classes:
    PKPushCredentials: {} # DONE
    PKPushPayload: {} # DONE
    PKPushRegistry: # DONE
        properties:
            'desiredPushTypes':
                type: Set<String>
                marshaler: NSSet.AsStringSetMarshaler
        methods:
            '-pushTokenForType:':
                name: getPushTokenForType
            '-initWithQueue:':
                name: init      
                annotations: ['@WeaklyLinked']
    
protocols:
    PKPushRegistryDelegate: # DONE
        methods:
            '-pushRegistry:didUpdatePushCredentials:forType:':
                name: didUpdatePushCredentials
            '-pushRegistry:didReceiveIncomingPushWithPayload:forType:':
                name: didReceiveIncomingPush
            '-pushRegistry:didInvalidatePushTokenForType:':
                name: didInvalidatePushToken
            '-pushRegistry:didReceiveIncomingPushWithPayload:forType:withCompletionHandler:':
                name: didReceiveIncomingPushWithPayload

functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (PK.*):
        class: PushKit
        name: 'Function__#{g[0]}'

values:
    # PKPushType
    PKPushType(.*):
        class: PKPushType
        name: '#{g[0]}'
        
    # Make sure we don't miss any values if new ones are introduced in a later version
    (PK.*):
        class: PushKit
        name: 'Value__#{g[0]}'

constants:
    # Make sure we don't miss any constants if new ones are introduced in a later version
    (PK.*):
        class: PushKit
        name: 'Constant__#{g[0]}'
