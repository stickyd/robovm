package: org.robovm.apple.webkit
include: [foundation.yaml, uikit.yaml, coregraphics.yaml, security.yaml]
library: WebKit
framework: WebKit
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/WebKit.framework/Headers/WebKit.h
    - /System/Library/Frameworks/WebKit.framework/Headers/WKSnapshotConfiguration.h # it is not referenced from WebKit and becomes opaque
typedefs:
    'void (^)(WKNavigationActionPolicy)': '@Block VoidBlock1<WKNavigationActionPolicy>'
    'void (^)(WKNavigationResponsePolicy)': '@Block VoidBlock1<WKNavigationResponsePolicy>'
    'void (^)(NSString *)': '@Block VoidBlock1<String>'

enums:
    WKErrorCode: {}
    WKNavigationType: {}
    WKNavigationActionPolicy: {}
    WKNavigationResponsePolicy: {}
    WKUserScriptInjectionTime: {}
    WKSelectionGranularity: {}
    WKDataDetectorTypes: {}
    WKAudiovisualMediaTypes: {}

classes:
    WKError:
        extends: NSError
        annotations: ['@StronglyLinked']

    WKBackForwardList: # DONE
        properties:
            'backList':
                type: NSArray<WKBackForwardListItem>
            'forwardList':
                type: NSArray<WKBackForwardListItem>
        methods:
            '-itemAtIndex:':
                name: getItem
    WKBackForwardListItem: {} # DONE
    WKFrameInfo: {} # DONE
    WKNavigation: {} # DONE
    WKNavigationAction: {} # DONE
    WKNavigationResponse: # DONE
        properties:
            'canShowMIMEType':
                omit_prefix: true
    WKPreferences: # DONE
        properties:
            'javaScriptCanOpenWindowsAutomatically':
                getter: javaScriptCanOpenWindowsAutomatically
    WKProcessPool: {} # DONE
    WKScriptMessage: {} # DONE
    WKSecurityOrigin: {} # DONE
    WKUserContentController: # DONE
        properties:
            'userScripts':
                type: NSArray<WKUserScript>
        methods:
            '-addUserScript:':
                trim_after_first_colon: true
            '-addScriptMessageHandler:name:':
                trim_after_first_colon: true
            '-removeScriptMessageHandlerForName:':
                name: removeScriptMessageHandler
    WKUserScript: # DONE
        methods:
            '-init.*':
                name: init
    WKWebViewConfiguration: # DONE
        properties:
            'mediaPlaybackRequiresUserAction':
                getter: mediaPlaybackRequiresUserAction
            'mediaPlaybackAllowsAirPlay':
                getter: mediaPlaybackAllowsAirPlay
        methods:
            '-setURLSchemeHandler:forURLScheme:':
                trim_after_first_colon: true
    WKWindowFeatures: # DONE
        properties:
            'allowsResizing':
                visibility: protected
            '.*':
                omit_prefix: true
                visibility: protected
    WKWebsiteDataRecord: # DONE
        properties:
            'dataTypes':
                type: Set<WKWebsiteDataType>
                marshaler: WKWebsiteDataType.AsSetMarshaler
    WKWebsiteDataStore: # DONE
        methods:
            '-fetchDataRecordsOfTypes:completionHandler:':
                name: fetchDataRecords
                parameters:
                    dataTypes:
                        type: Set<WKWebsiteDataType>
                        marshaler: WKWebsiteDataType.AsSetMarshaler
                    completionHandler:
                        type: '@Block VoidBlock1<NSArray<WKWebsiteDataRecord>>'
            '-removeDataOfTypes.*':
                name: removeData
                parameters:
                    dataTypes:
                        type: Set<WKWebsiteDataType>
                        marshaler: WKWebsiteDataType.AsSetMarshaler
                    websiteDataTypes:
                        type: Set<WKWebsiteDataType>
                        marshaler: WKWebsiteDataType.AsSetMarshaler
                    dataRecords:
                        type: NSArray<WKWebsiteDataRecord>
                    completionHandler:
                        type: '@Block Runnable'
            '+(defaultDataStore|nonPersistentDataStore)':
                property: true
            '+allWebsiteDataTypes':
                property: true
                return_type: Set<WKWebsiteDataType>
                return_marshaler: WKWebsiteDataType.AsSetMarshaler
    WKWebView: # DONE
        annotations: ['@WeaklyLinked']
        properties:
            'hasOnlySecureContent':
                omit_prefix: true
            'canGoBack':
                omit_prefix: true
            'canGoForward':
                omit_prefix: true
            'certificateChain':
                type: List<SecCertificate>
                marshaler: NSArray.AsListMarshaler
        methods:
            '-init.*':
                name: init
            '-loadRequest:':
                trim_after_first_colon: true
            '-loadHTMLString:baseURL:':
                trim_after_first_colon: true
            '-goToBackForwardListItem:':
                trim_after_first_colon: true
            '-loadFileURL:allowingReadAccessToURL:':
                trim_after_first_colon: true
            '-loadData:MIMEType:characterEncodingName:baseURL:':
                trim_after_first_colon: true
            '-evaluateJavaScript:completionHandler:':
                trim_after_first_colon: true
                parameters:
                    completionHandler:
                        type: '@Block VoidBlock2<NSObject, NSError>' # TODO change NSObject type to correct type???
            '-takeSnapshotWithConfiguration:completionHandler:':
                name: takeSnapshot
    WKPreviewElementInfo: {}
    WKContentRuleList: {} #since 11.0
    WKContentRuleListStore: #since 11.0
        methods:
            '-compileContentRuleListForIdentifier:encodedContentRuleList:completionHandler:':
                name: compileContentRuleList
            '-lookUpContentRuleListForIdentifier:completionHandler:':
                name: lookUpContentRuleList
            '-removeContentRuleListForIdentifier:completionHandler:':
                name: removeContentRuleList
    WKHTTPCookieStore: #since 11.0
        methods:
            '-setCookie:completionHandler:':
                trim_after_first_colon: true
            '-deleteCookie:completionHandler:':
                trim_after_first_colon: true
    WKSnapshotConfiguration: {} #since 11.0

protocols:
    WKNavigationDelegate: # DONE
        methods:
            '-webView:decidePolicyForNavigationAction:decisionHandler:':
                name: decidePolicyForNavigationAction
            '-webView:decidePolicyForNavigationResponse:decisionHandler:':
                name: decidePolicyForNavigationResponse
            '-webView:didStartProvisionalNavigation:':
                name: didStartProvisionalNavigation
            '-webView:didReceiveServerRedirectForProvisionalNavigation:':
                name: didReceiveServerRedirectForProvisionalNavigation
            '-webView:didFailProvisionalNavigation:withError:':
                name: didFailProvisionalNavigation
            '-webView:didCommitNavigation:':
                name: didCommitNavigation
            '-webView:didFinishNavigation:':
                name: didFinishNavigation
            '-webView:didFailNavigation:withError:':
                name: didFailNavigation
            '-webView:didReceiveAuthenticationChallenge:completionHandler:':
                name: didReceiveAuthenticationChallenge
            '-webViewWebContentProcessDidTerminate:':
                name: webContentProcessDidTerminate
    WKScriptMessageHandler: # DONE
        methods:
            '-userContentController:didReceiveScriptMessage:':
                name: didReceiveScriptMessage
    WKUIDelegate: # DONE
        methods:
            '-webView:createWebViewWithConfiguration:forNavigationAction:windowFeatures:':
                name: createWebView
            '-webViewDidClose:':
                name: didClose
            '-webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:completionHandler:':
                name: runJavaScriptAlertPanel
            '-webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:completionHandler:':
                name: runJavaScriptConfirmPanel
            '-webView:runJavaScriptTextInputPanelWithPrompt:defaultText:initiatedByFrame:completionHandler:':
                name: runJavaScriptTextInputPanel
            '-webView:shouldPreviewElement:':
                name: shouldPreviewElement
            '-webView:previewingViewControllerForElement:defaultActions:':
                name: getPreviewingViewControllerForElement
            '-webView:commitPreviewingViewController:':
                name: commitPreviewingViewController
    WKHTTPCookieStoreObserver: {} #since 11.0
    WKPreviewActionItem: {} #since 10.0
    WKURLSchemeHandler: #since 11.0
        methods:
            '-webView:startURLSchemeTask:':
                name: startURLSchemeTask
            '-webView:stopURLSchemeTask:':
                name: stopURLSchemeTask
    WKURLSchemeTask: {} #since 11.0

functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?WK.*):
        class: WebKit
        name: 'Function__#{g[0]}'

values:
    WKErrorDomain:
        class: WKError
        name: getClassDomain

    WKWebsiteDataType(.*):
        enum: WKWebsiteDataType
        name: '#{g[0]}'
        type: NSString

    WKPreviewActionItemIdentifier(.*):
        class: WKPreviewActionItemIdentifiers
        name: '#{g[0]}'

    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?WK.*):
        class: WebKit
        name: 'Value__#{g[0]}'

constants:
    WK_API_ENABLED:
        exclude: true

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?WK.*):
        class: WebKit
        name: 'Constant__#{g[0]}'
